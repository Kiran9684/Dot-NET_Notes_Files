
1.
**********************************************
Database Normalization :
-----------------------
	-Database normalization is the process of efficiently organizing data in a database.
	-There are two reasons of this normalization process :
		->Eliminating redundant data, for example, storing the same data in more than one table.
		->Ensuring data dependencies make sense.
		

	-Normalization guidelines are divided into normal forms; think of a form as the format or the way a database structure is laid out.

	-The aim of normal forms is to organize the database structure, so that it complies with the rules of first normal form, 
	 then second normal form and finally the third normal form.


First Normal Form (1NF):
------------------------
	First Rule of 1NF:
		-You must define the data items. This means looking at the data to be stored, 
		 organizing the data into columns, defining what type of data each column contains
		 and then finally putting the related columns into their own table.
		 
	Second Rule of 1NF :
		-The next step is ensuring that there are no repeating groups of data
		
	Third Rule of 1NF :
		-The final rule of the first normal form, create a primary key for each table which we have already created.
	
Example :	

		ID	NAME	AGE		ADDRESS				ORDERS
		100	Sachin	36		Lower West Side		Cannon XL-200
		100	Sachin	36		Lower West Side		Battery XL-200
		100	Sachin	36		Lower West Side		Tripod Large

-->>But as per the 1NF, we need to ensure that there are no repeating groups of data. 
	So, let us break the above table into two parts and then join them using a key as shown in the following program −
	

		CUSTOMERS table
		ID	NAME	AGE	ADDRESS
        100	Sachin	36	Lower West Side
		
		ORDERS table
		ID	CUSTOMER_ID		ORDERS
		10	100				Cannon XL-200
		11	100				Battery XL-200
		12	100				Tripod Large


Second Normal Form (2NF):
-------------------------
		-The Second Normal Form states that it should meet all the rules for 1NF and
		 there must be no partial dependences of any of the columns on the primary key −
	
Example :
CREATE TABLE CUSTOMERS(
   CUST_ID    INT              NOT NULL,
   CUST_NAME VARCHAR (20)      NOT NULL,
   ORDER_ID   INT              NOT NULL,
   ORDER_DETAIL VARCHAR (20)  NOT NULL,
   SALE_DATE  DATETIME,
   PRIMARY KEY (CUST_ID, ORDER_ID)
);

However, the table is not in the second normal form because there are partial dependencies of primary keys and columns.

To make this table comply with the second normal form, you need to separate the columns into three tables.

CREATE TABLE CUSTOMERS(
   CUST_ID    INT              NOT NULL,
   CUST_NAME VARCHAR (20)      NOT NULL,
   PRIMARY KEY (CUST_ID)
);

CREATE TABLE ORDERS(
   ORDER_ID   INT              NOT NULL,
   ORDER_DETAIL VARCHAR (20)  NOT NULL,
   PRIMARY KEY (ORDER_ID)
);

CREATE TABLE CUSTMERORDERS(
   CUST_ID    INT              NOT NULL,
   ORDER_ID   INT              NOT NULL,
   SALE_DATE  DATETIME,
   PRIMARY KEY (CUST_ID, ORDER_ID)
);

Third Normal Form (3NF):
-----------------------
A table is in a third normal form when the following conditions are met −
	->It is in second normal form.
	->All nonprimary fields are dependent on the primary key.

Example :
CREATE TABLE CUSTOMERS(
   CUST_ID       INT              NOT NULL,
   CUST_NAME     VARCHAR (20)      NOT NULL,
   DOB           DATE,
   STREET        VARCHAR(200),
   CITY          VARCHAR(100),
   STATE         VARCHAR(100),
   ZIP           VARCHAR(12),
   EMAIL_ID      VARCHAR(256),
   PRIMARY KEY (CUST_ID)
);

To comply with the third normal form:

CREATE TABLE ADDRESS(
   ZIP           VARCHAR(12),
   STREET        VARCHAR(200),
   CITY          VARCHAR(100),
   STATE         VARCHAR(100),
   PRIMARY KEY (ZIP)
);

CREATE TABLE CUSTOMERS(
   CUST_ID       INT              NOT NULL,
   CUST_NAME     VARCHAR (20)      NOT NULL,
   DOB           DATE,
   ZIP           VARCHAR(12),
   EMAIL_ID      VARCHAR(256),
   PRIMARY KEY (CUST_ID)
);


Note : Also Refer SQL Notes 

**********************************************
